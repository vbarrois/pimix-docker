!function(e){var n={};function t(o){if(n[o])return n[o].exports;var i=n[o]={i:o,l:!1,exports:{}};return e[o].call(i.exports,i,i.exports,t),i.l=!0,i.exports}t.m=e,t.c=n,t.d=function(e,n,o){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:o})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(t.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var i in e)t.d(o,i,function(n){return e[n]}.bind(null,i));return o},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p="/",t(t.s=26)}([function(e,n,t){"use strict";const o=t(2),i=t(6).production,r={};let s;s=i.use_env_variable?new o(process.env[i.use_env_variable],i):new o(i.database,i.username,i.password,i);const a=t(7);a.keys().map(a).forEach(e=>{const n=e(s,o);r[n.name]=n}),Object.keys(r).forEach(e=>{r[e].associate&&r[e].associate(r)}),r.sequelize=s,r.Sequelize=o,n.a=r},,function(e,n){e.exports=require("sequelize")},function(e,n){e.exports=require("lodash")},function(e,n){e.exports=require("jimp")},,function(e){e.exports=JSON.parse('{"development":{"dialect":"sqlite","seederStorage":"sequelize","storage":"./pimix.sqlite3","logging":false},"production":{"dialect":"sqlite","storage":"/home/pimix.sqlite3","seederStorage":"sequelize","logging":false}}')},function(e,n,t){var o={"./artist.js":8,"./genre.js":9,"./song.js":10,"./songartist.js":11,"./songgenre.js":12,"./songlog.js":13,"./songloguser.js":14,"./user.js":15};function i(e){var n=r(e);return t(n)}function r(e){if(!t.o(o,e)){var n=new Error("Cannot find module '"+e+"'");throw n.code="MODULE_NOT_FOUND",n}return o[e]}i.keys=function(){return Object.keys(o)},i.resolve=r,e.exports=i,i.id=7},function(e,n,t){"use strict";e.exports=(e,n)=>e.define("Artist",{name:n.STRING})},function(e,n,t){"use strict";e.exports=(e,n)=>e.define("Genre",{name:n.STRING})},function(e,n,t){"use strict";e.exports=(e,n)=>{const t=e.define("Song",{filepath:n.STRING,filename:n.STRING,title:n.STRING,album:n.STRING,year:n.INTEGER,bitrate:n.INTEGER,duration:n.DOUBLE,samplerate:n.INTEGER,size:n.INTEGER,ino:n.INTEGER,birth:n.DATE},{indexes:[{unique:!0,fields:["filepath","filename"]}]});return t.beforeValidate(e=>{e.filepath&&(e.filepath=e.filepath.replace(/\\/g,"/"))}),t.associate=function(e){e.Song.hasMany(e.SongLog,{as:"SongLogs",foreignKey:"songid"})},t}},function(e,n,t){"use strict";e.exports=(e,n)=>{const t=e.define("SongArtist",{song_id:n.INTEGER,artist_id:n.INTEGER},{indexes:[{unique:!0,fields:["song_id","artist_id"]}]});return t.associate=function(e){e.Song.belongsToMany(e.Artist,{as:"Artists",through:{model:t,unique:!1},foreignKey:"song_id"}),e.Artist.belongsToMany(e.Song,{as:"Songs",through:{model:t,unique:!1},foreignKey:"artist_id"})},t}},function(e,n,t){"use strict";e.exports=(e,n)=>{const t=e.define("SongGenre",{song_id:n.INTEGER,genre_id:n.INTEGER},{indexes:[{unique:!0,fields:["song_id","genre_id"]}]});return t.associate=function(e){e.Song.belongsToMany(e.Genre,{as:"Genres",through:{model:t,unique:!1},foreignKey:"song_id"}),e.Genre.belongsToMany(e.Song,{as:"Songs",through:{model:t,unique:!1},foreignKey:"genre_id"})},t}},function(e,n,t){"use strict";e.exports=(e,n)=>{const t=e.define("SongLog",{sessionid:n.STRING(36),songid:n.INTEGER,listenratio:n.FLOAT,origin:n.STRING(10)});return t.associate=function(e){t.belongsTo(e.Song,{foreignKey:"songid"})},t}},function(e,n,t){"use strict";e.exports=(e,n)=>{const t=e.define("SongLogUser",{logid:n.INTEGER,userid:n.INTEGER,vote:n.INTEGER});return t.associate=function(e){t.belongsTo(e.SongLog,{foreignKey:"logid"}),t.belongsTo(e.User,{foreignKey:"userid"})},t}},function(e,n,t){"use strict";var o=t(16);e.exports=(e,n)=>{const t=e.define("User",{login:n.STRING,password:n.STRING,name:n.STRING,rights:n.INTEGER});return t.prototype.validPassword=function(e){return o.compareSync(e,this.password)},t.beforeCreate(e=>(void 0!==e.login&&(e.login=e.login.trim()),void 0!==e.name&&(e.name=e.name.trim()),e)),t.afterValidate(e=>{void 0!==e.password&&(e.password=o.hashSync(e.password,o.genSaltSync(10),null))}),t}},function(e,n){e.exports=require("bcryptjs")},function(e){e.exports=JSON.parse('{"name":"pimix-data","version":"1.0.8","description":"Pimix REST API from data management","main":"index.js","scripts":{"scanner":"nodemon ./dist/scanner.js","data":"nodemon ./dist/data.js","test":"echo \\"Error: no test specified\\" && exit 1","lint":"eslint \\"src/**/*.js\\" --ignore-pattern node_modules/ ","build":"rm -rf dist && webpack","start":"npx concurrently -k -n \\"data,scanner\\" -p \\"[{name}]\\" -c \\"yellow,green\\" \\"npm run data\\" \\"npm run scanner\\""},"repository":{"type":"git","url":"git+https://github.com/vbarrois/pimix-data.git"},"author":"Vincent Barrois","license":"ISC","bugs":{"url":"https://github.com/vbarrois/pimix-data/issues"},"homepage":"https://github.com/vbarrois/pimix-data#readme","dependencies":{"@babel/core":"^7.9.6","@babel/preset-env":"^7.9.6","babel-loader":"^8.1.0","copy-webpack-plugin":"^5.1.1","eslint":"^6.6.0","eslint-config-standard":"^14.1.0","eslint-loader":"^4.0.2","eslint-plugin-import":"^2.18.2","eslint-plugin-node":"^10.0.0","eslint-plugin-promise":"^4.2.1","eslint-plugin-standard":"^4.0.1","nodemon":"^1.19.4","webpack":"^4.43.0","webpack-cli":"^3.3.11","webpack-dev-middleware":"^3.7.2","webpack-hot-middleware":"^2.25.0","webpack-node-externals":"^1.7.2","bcryptjs":"^2.4.3","bull":"^3.11.0","chokidar":"^3.2.2","colors":"^1.4.0","concurrently":"^5.1.0","express":"^4.17.1","jimp":"^0.10.0","moment":"^2.24.0","music-metadata":"^4.8.2","node-spotify-api":"^1.1.1","sequelize":"^5.21.1","socket.io":"^2.3.0","sqlite3":"^4.1.1"}}')},function(e,n){e.exports=require("moment")},function(e,n,t){"use strict";t.r(n),t.d(n,"isRegistered",(function(){return i})),t.d(n,"create",(function(){return r})),t.d(n,"update",(function(){return s})),t.d(n,"destroy",(function(){return a}));var o=t(0);const i=(e,n,t,i)=>{o.a.Song.findOne({where:{filename:e.filename,filepath:e.filepath}}).then(e=>{null===e?t():n(e)}).catch(i)},r=e=>o.a.Song.create(e),s=(e,n)=>new Promise((t,i)=>{o.a.Song.update(n,{where:e}).then(()=>o.a.Song.findOne({where:e})).then(t).catch(i)}),a=e=>o.a.Song.destroy({where:e})},function(e,n){e.exports=require("fs")},function(e,n){e.exports=require("socket.io-client")},function(e,n){e.exports=require("bull")},function(e,n){e.exports=require("util")},,,function(e,n,t){"use strict";t.r(n);var o=t(0),i=t(21),r=t.n(i),s=t(22),a=t.n(s),c=t(3),l=t.n(c),u=t(2),d=t.n(u),f=t(23),g=t.n(f),p=t(18),_=t.n(p);const m=t(27),h=t(19),b=t(17),S=t(28),y=process.env.MUSIC_FOLDER||"/home/music",v=process.env.COVER_FOLDER||"/home/covers";console.clear(),console.log("__________.__   _____  .__           _________                                         "),console.log("\\______   \\__| /     \\ |__|__  ___  /   _____/ ____ _____    ____   ____   ___________ "),console.log(" |     ___/  |/  \\ /  \\|  \\  \\/  /  \\_____  \\_/ ___\\\\__  \\  /    \\ /    \\_/ __ \\_  __ \\"),console.log(" |    |   |  /    Y    \\  |>    <   /        \\  \\___ / __ \\|   |  \\   |  \\  ___/|  | \\/"),console.log(" |____|   |__\\____|__  /__/__/\\_ \\ /_______  /\\___  >____  /___|  /___|  /\\___  >__|   "),console.log("                     \\/         \\/         \\/     \\/     \\/     \\/     \\/     \\/       "+b.version),console.log(),console.log("> Music Folder: "+y),console.log("> Covers Folder: "+v);const E="http://"+(process.env.PIMIX_ROUTER||"127.0.0.1:82");console.log("Scanner connecting to router ...");const x=r.a.connect(E,{query:'binding={ "component": "scanner" }'}),w={nbsongs:0,since:null,queue:0,completed:0,failed:0};function T(){const e=JSON.stringify(w);x.emit("update",e)}x.on("connect",()=>{console.log("Router connection established"),o.a.sequelize.query("SELECT COUNT(*) AS nbsongs, MAX(createdAt) AS since FROM Songs",{type:d.a.QueryTypes.SELECT}).then(e=>{const n=e[0];w.nbsongs=n.nbsongs,w.since=_()(n.since,"YYYY-MM-DD").toString()}).catch(e=>{console.log("There was an error querying scanner stats",e.toString())}),T()});var R=t(20);R.existsSync(y)||R.mkdirSync(y),R.existsSync(v)||R.mkdirSync(v),R.existsSync(v+"/thumbs/")||R.mkdirSync(v+"/thumbs/");var q=[];const I=process.env.PIMIX_REDIS||"127.0.0.1:6379";var G=a()("register file","redis://"+I);async function O(e){w.queue++,G.add(e)}G.empty().then(()=>o.a.sequelize.query("SELECT filepath, filename FROM Songs",{type:d.a.QueryTypes.SELECT})).then(e=>{q=e,console.log("Queue cleaned"),G.process(S);t(34).watch(y,{ignored:/(^|[/\\])\../,persistent:!0,awaitWriteFinish:{stabilityThreshold:2e3,pollInterval:100}}).on("add",(e,n)=>{const t=m.getFileProperties(e);!function(e){l.a.remove(q,n=>n.filepath===e.filepath&&n.filename===e.filename)}(t),m.isSupportedAudioFile(t)&&h.isRegistered(t,e=>{n.ino===e.ino&&n.size===e.size||O({action:"update",file:t,stats:n})},()=>{O({action:"add",file:t,stats:n})},e=>{console.log("watcher add error: "+e.toString())})}).on("unlink",e=>{const n=m.getFileProperties(e);m.isSupportedAudioFile(n)&&O({action:"remove",file:n})}).on("change",(e,n)=>{const t=m.getFileProperties(e);m.isSupportedAudioFile(t)&&O({action:"update",file:t,stats:n})}).on("ready",()=>{!function(){if(q.length>0){const e=[];l.a.forEach(q,n=>{e.push(h.destroy({filepath:n.filepath,filename:n.filename}))}),Promise.all(e).then(()=>{console.log(q.length+" database entries without file removed"),console.log("Database is up-to-date")}).catch(()=>{console.log("Cannot clean entries without file")})}else console.log("Database is up-to-date")}(),console.log("Initial scan complete. Ready for changes"),T(),G.getJobCounts().then(e=>{console.log(g.a.inspect(e,{showHidden:!1,depth:null}))})})}).catch(e=>{console.log(e)}),G.on("error",e=>{console.log("CRITICAL: Cannot connect the REDIS server ! exiting... "+e),process.exit()}).on("completed",(e,n)=>{w.queue--,w.completed++,"add"===e.data.action?(w.nbsongs++,w.since=_()().toString()):"remove"===e.data.action&&w.nbsongs--,e.remove()}).on("failed",(e,n)=>{w.queue--,w.failed++,console.log(e.data.file.filename+" job failed ["+n+"]"),e.remove()}).on("active",(e,n)=>{T()}).on("drained",()=>{console.log("queue idle"),T()})},function(e,n){n.getFileProperties=e=>{const n=e.replace(/\\/g,"/"),t=n.lastIndexOf("/"),o=n.lastIndexOf(".");return{filepath:n.substring(0,t),filename:n.substring(t+1,t.length),fileext:n.substring(o+1,o.length)}},n.isSupportedAudioFile=e=>"mp3"===e.fileext},function(e,n,t){const o=t(20),i=t(4),r=t(29),s=t(19),a=t(30),c=t(31),l=t(32),u=t(33),d=process.env.COVER_FOLDER||"/home/covers";e.exports=function(e){return new Promise((n,t)=>{var i=process.hrtime();"remove"===e.data.action?s.destroy({filepath:e.data.file.filepath,filename:e.data.file.filename}).then(()=>{!async function(e){const n=e.lastIndexOf("."),t=d+"/"+e.substring(0,n)+".jpg";o.unlink(t,e=>{null!==e&&console.log("cannot delete cover "+e)});const i=d+"/thumbs/"+e.substring(0,n)+".jpg";o.unlink(i,e=>{null!==e&&console.log("cannot delete thumb cover "+e)})}(e.data.file.filename);var t=process.hrtime(i);n("File "+e.data.file.filename+" removed in "+t[1]/1e6+"ms")}).catch(t):h(e).then(o=>{"add"===e.data.action?s.create(o.song).then(n=>Promise.all([f(n,o.metadata.common.artists),p(n,o.metadata.common.genre),m(e.data.file.filename,o.metadata.common.picture)])).then(()=>{var t=process.hrtime(i);n("File "+e.data.file.filename+" created in "+t[1]/1e6+"ms")}).catch(t):"update"===e.data.action&&s.update({filepath:e.data.file.filepath,filename:e.data.file.filename},o.song).then(n=>Promise.all([f(n,o.metadata.common.artists),p(n,o.metadata.common.genre),m(e.data.file.filename,o.metadata.common.picture)])).then(()=>{var t=process.hrtime(i);n("File "+e.data.file.filename+" updated in "+t[1]/1e6+"ms")}).catch(t)})})};const f=(e,n)=>new Promise((t,o)=>{u.cleanSongArtists(e).then(()=>{const t=[];return n&&n.forEach(n=>{n.split(";").forEach(n=>{const o=n.trim();t.push(g(e,o))})}),Promise.all(t)}).then(t).catch(o)}),g=(e,n)=>new Promise((t,o)=>{c.findOrCreate({name:n}).then(n=>u.setSongArtist(e,n)).then(t).catch(o)}),p=(e,n)=>new Promise((t,o)=>{l.cleanSongGenres(e).then(()=>{const t=[];return n&&n.forEach(n=>{n.split(";").forEach(n=>{const o=n.trim().toUpperCase();t.push(_(e,o))})}),Promise.all(t)}).then(t).catch(o)}),_=(e,n)=>new Promise((t,o)=>{a.findOrCreate({name:n}).then(n=>l.setSongGenre(e,n)).then(t).catch(o)}),m=(e,n)=>new Promise((t,o)=>{if(n.length>0){const r=n[0].data,s=e.lastIndexOf("."),a=d+"/"+e.substring(0,s)+".jpg",c=d+"/thumbs/"+e.substring(0,s)+".jpg";i.read(r,(e,n)=>{e?o(e):(n.resize(500,500).quality(60).write(a).resize(150,150).quality(60).write(c),t())})}}),h=e=>new Promise((n,t)=>{const o=e.data.file.filepath+"/"+e.data.file.filename;r.parseFile(o).then(t=>{const o={filepath:e.data.file.filepath,filename:e.data.file.filename,title:t.common.title,album:t.common.album,year:t.common.year,bitrate:t.format.bitrate,duration:t.format.duration,samplerate:t.format.sampleRate,size:e.data.stats.size,ino:e.data.stats.ino,birth:e.data.stats.birthtime};n({song:o,metadata:t})}).catch(t)})},function(e,n){e.exports=require("music-metadata")},function(e,n,t){"use strict";t.r(n),t.d(n,"findOrCreate",(function(){return i}));var o=t(0);const i=e=>new Promise((n,t)=>{o.a.Genre.findOne({where:e}).then((function(t){if(!t)return o.a.Genre.create(e);n(t)})).then(n).catch(t)})},function(e,n,t){"use strict";t.r(n),t.d(n,"findOrCreate",(function(){return i}));var o=t(0);const i=e=>new Promise((n,t)=>{o.a.Artist.findOne({where:e}).then(t=>{if(!t)return o.a.Artist.create(e);n(t)}).then(n).catch(t)})},function(e,n,t){"use strict";t.r(n),t.d(n,"setSongGenre",(function(){return i})),t.d(n,"cleanSongGenres",(function(){return r}));var o=t(0);const i=(e,n)=>o.a.SongGenre.create({song_id:e.id,genre_id:n.id}),r=e=>o.a.SongGenre.destroy({where:{song_id:e.id}})},function(e,n,t){"use strict";t.r(n),t.d(n,"setSongArtist",(function(){return i})),t.d(n,"cleanSongArtists",(function(){return r}));var o=t(0);const i=(e,n)=>o.a.SongArtist.create({song_id:e.id,artist_id:n.id}),r=e=>o.a.SongArtist.destroy({where:{song_id:e.id}})},function(e,n){e.exports=require("chokidar")}]);