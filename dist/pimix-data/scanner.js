(()=>{var e={419:(e,t,n)=>{"use strict";n.d(t,{D2:()=>i,tB:()=>o});var s=n(614);const o=(e,t,n)=>new Promise(((s,o)=>{a(e,n).then((e=>{s({genre_id:e.id,song_id:t})})).catch(o)})),i=(e,t,n)=>new Promise(((s,o)=>{a(e,n).then((e=>{s({genre_id:e.id,artist_id:t})})).catch(o)})),a=(e,t)=>new Promise(((n,o)=>{const i=e.trim().toUpperCase();s.default.Genre.findOne({where:{name:i}}).then((e=>{if(null===e)return s.default.Genre.create({name:i},{transaction:t});n(e)})).then(n).catch(o)}))},680:(e,t,n)=>{"use strict";n.r(t),n.d(t,{create:()=>i,destroy:()=>r,formatSong:()=>l,isRegistered:()=>o,update:()=>a});var s=n(614);const o=(e,t,n,o)=>{s.default.Song.findOne({where:{filename:e.filename,filepath:e.filepath}}).then((e=>{null===e?n():t(e)})).catch(o)},i=e=>s.default.Song.create(e),a=(e,t)=>new Promise(((n,o)=>{s.default.Song.update(t,{where:e}).then((()=>s.default.Song.findOne({where:e}))).then(n).catch(o)})),r=(e,t)=>s.default.Song.destroy({where:e,transaction:t}),l=e=>({id:e.id,filepath:e.filepath,filename:e.filename,title:e.title,album:e.album,year:e.year,bitrate:e.bitrate,duration:e.duration,samplerate:e.samplerate,size:e.size,ino:e.ino,birth:e.birth,createdAt:e.createdAt,updatedAt:e.updatedAt})},417:(e,t,n)=>{"use strict";n.r(t),n.d(t,{addSongLog:()=>o,addSongUserLog:()=>a,updateSongLog:()=>i});var s=n(614);const o=e=>s.default.SongLog.create(e),i=e=>s.default.SongLog.update({listenratio:e.listenratio},{where:{id:e.id}}),a=e=>s.default.SongLogUser.create(e)},890:e=>{"use strict";e.exports=(e,t)=>{const n=e.define("Artist",{name:t.STRING,state:t.BOOLEAN,spotifyId:t.STRING,popularity:t.INTEGER,followers:t.INTEGER});return n.associate=function(e){e.Artist.hasMany(e.ArtistRelated,{as:"ArtistRelations",foreignKey:"artist_id"})},n}},978:e=>{"use strict";e.exports=(e,t)=>{const n=e.define("ArtistGenre",{artist_id:t.INTEGER,genre_id:t.INTEGER},{indexes:[{unique:!0,fields:["artist_id","genre_id"]}]});return n.associate=function(e){e.Artist.belongsToMany(e.Genre,{as:"Genres",through:{model:n,unique:!1},foreignKey:"artist_id"}),e.Genre.belongsToMany(e.Artist,{as:"Artists",through:{model:n,unique:!1},foreignKey:"genre_id"})},n}},953:e=>{"use strict";e.exports=(e,t)=>e.define("ArtistRelated",{artist_id:t.INTEGER,name:t.STRING,spotifyId:t.STRING,followers:t.INTEGER,popularity:t.INTEGER},{freezeTableName:!0})},936:e=>{"use strict";e.exports=(e,t)=>{const n=e.define("Favorite",{songid:t.INTEGER,userid:t.INTEGER,public:t.INTEGER},{indexes:[{unique:!0,fields:["songid","userid"]}]});return n.associate=function(e){n.belongsTo(e.User,{foreignKey:"userid"}),n.belongsTo(e.Song,{foreignKey:"songid"})},n}},567:e=>{"use strict";e.exports=(e,t)=>e.define("Genre",{name:t.STRING,state:t.BOOLEAN})},614:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>c,formatSequelizeErrors:()=>u});var s=n(517),o=n.n(s);const i=n(496),a=n(626).production,r={};let l;l=a.use_env_variable?new i(process.env[a.use_env_variable],a):new i(a.database,a.username,a.password,a);const d=n(956);d.keys().map(d).forEach((e=>{const t=e(l,i);r[t.name]=t})),Object.keys(r).forEach((e=>{r[e].associate&&r[e].associate(r)})),r.DB=l,r.sequelize=l;const c=r,u=e=>o().map(e,(e=>({path:e.path,key:e.validatorKey,message:e.message})))},941:e=>{"use strict";e.exports=(e,t)=>{const n=e.define("Playlist",{name:{type:t.STRING,allowNull:!1,validate:{notNull:{msg:"validators.playlist.name.notnull"},isUnique(e){const t=this.id,s=this.userid;return n.findOne({where:{name:e,userid:s},transaction:this._validationTransaction}).then((e=>{if(null!==e&&e.id!==t)throw new Error("validators.playlist.name.unique")}))}}},userid:t.INTEGER,public:t.INTEGER});return n.associate=function(e){n.belongsTo(e.User,{foreignKey:"userid"})},n}},806:e=>{"use strict";e.exports=(e,t)=>{const n=e.define("PlaylistSongs",{playlistid:t.INTEGER,index:{type:t.INTEGER,allowNull:!1,validate:{notNull:{msg:"validators.playlist.index.notnull"},isInt:{min:0,msg:"validators.playlist.index.format"}}},songid:{type:t.INTEGER,allowNull:!1,validate:{notNull:{msg:"validators.song.id.notnull"},isInt:{min:1,msg:"validators.song.id.format"},isUnique(e){const t=this.id,s=this.playlistid,o=this.songid;return n.findOne({where:{playlistid:s,songid:o},transaction:this._validationTransaction}).then((e=>{if(null!==e&&e.id!==t)throw new Error("validators.playlistsong.unique")}))}}}});return n.beforeValidate(((e,t)=>(t.transaction&&(e._validationTransaction=t.transaction),e))),n.afterValidate(((e,t)=>{delete e._validationTransaction})),n.associate=function(e){e.Song.belongsToMany(e.Playlist,{as:"Playlists",through:n,foreignKey:"songid"}),e.Playlist.belongsToMany(e.Song,{as:"Songs",through:n,foreignKey:"playlistid"})},n}},818:e=>{"use strict";e.exports=(e,t)=>{const n=e.define("Song",{filepath:t.STRING,filename:t.STRING,title:t.STRING,album:t.STRING,year:t.INTEGER,bitrate:t.INTEGER,duration:t.DOUBLE,samplerate:t.INTEGER,size:t.INTEGER,ino:t.INTEGER,birth:t.DATE},{indexes:[{unique:!0,fields:["filepath","filename"]}]});return n.beforeValidate((e=>{e.filepath&&(e.filepath=e.filepath.replace(/\\/g,"/"))})),n.associate=function(e){n.hasMany(e.SongLog,{as:"SongLogs",foreignKey:"songid"}),n.hasMany(e.Favorite,{as:"Favorites",foreignKey:"songid"})},n}},673:e=>{"use strict";e.exports=(e,t)=>{const n=e.define("SongArtist",{song_id:t.INTEGER,artist_id:t.INTEGER},{indexes:[{unique:!0,fields:["song_id","artist_id"]}]});return n.associate=function(e){e.Song.belongsToMany(e.Artist,{as:"Artists",through:{model:n,unique:!1},foreignKey:"song_id"}),e.Artist.belongsToMany(e.Song,{as:"Songs",through:{model:n,unique:!1},foreignKey:"artist_id"})},n}},829:e=>{"use strict";e.exports=(e,t)=>{const n=e.define("SongGenre",{song_id:t.INTEGER,genre_id:t.INTEGER},{indexes:[{unique:!0,fields:["song_id","genre_id"]}]});return n.associate=function(e){e.Song.belongsToMany(e.Genre,{as:"Genres",through:{model:n,unique:!1},foreignKey:"song_id"}),e.Genre.belongsToMany(e.Song,{as:"Songs",through:{model:n,unique:!1},foreignKey:"genre_id"})},n}},735:e=>{"use strict";e.exports=(e,t)=>{const n=e.define("SongLog",{sessionid:t.STRING(36),songid:t.INTEGER,listenratio:t.FLOAT,origin:t.STRING(10)});return n.associate=function(e){n.belongsTo(e.Song,{foreignKey:"songid"}),n.hasMany(e.SongLogUser,{as:"Votes",foreignKey:"logid"})},n}},498:e=>{"use strict";e.exports=(e,t)=>{const n=e.define("SongLogUser",{logid:t.INTEGER,userid:t.INTEGER,vote:t.INTEGER});return n.associate=function(e){n.belongsTo(e.SongLog,{foreignKey:"logid"}),n.belongsTo(e.User,{foreignKey:"userid"})},n}},729:(e,t,n)=>{"use strict";var s=n(432);e.exports=(e,t)=>{const n=e.define("User",{login:t.STRING,password:t.STRING,name:t.STRING,rights:t.INTEGER});return n.prototype.validPassword=function(e){return s.compareSync(e,this.password)},n.beforeCreate((e=>(void 0!==e.login&&(e.login=e.login.trim()),void 0!==e.name&&(e.name=e.name.trim()),e))),n.afterValidate((e=>{void 0!==e.password&&(e.password=s.hashSync(e.password,s.genSaltSync(10),null))})),n.associate=function(e){n.hasMany(e.Playlist,{as:"Playlists",foreignKey:"userid"}),n.hasMany(e.SongLogUser,{as:"Votes",foreignKey:"userid"})},n}},415:(e,t,n)=>{"use strict";n.d(t,{J8:()=>M,o3:()=>D,D$:()=>U,et:()=>k,T_:()=>K});const s=require("socket.io-client");var o=n.n(s),i=n(245),a=n.n(i);const r=require("chokidar");var l=n.n(r),d=n(680),c=n(416);const u=e=>{const t=e.replace(/\\/g,"/"),n=t.lastIndexOf("/"),s=t.lastIndexOf(".");return{filepath:t.substring(0,n),filename:t.substring(n+1,n.length),fileext:t.substring(s+1,s.length)}},g=e=>"mp3"===e.fileext;var p=n(496),f=n.n(p),m=n(358),h=n.n(m),_=n(517),y=n.n(_),S=n(614);const b=require("express");var E=n.n(b);const T=require("qrcode");var w=n.n(T);const v=require("os");var R=n.n(v);const N=n(417),I=E().Router();I.get("/api/qrcode/:port",((e,t)=>{const n=G()[0];y().isNil(n)?t.end():w().toFileStream(t,`http://${n.address}${e.params.port?`:${e.params.port}`:""}`)})),I.get("/api/network",((e,t)=>{t.status(200).send(G())}));const G=(e="IPV4",t=!0)=>{const n=R().networkInterfaces();return y().flatten(y().filter(y().map(n,(n=>y().map(y().filter(n,(n=>n.family.toString().toUpperCase()===e&&n.internal===!t&&"255.255.255.0"===n.netmask)),(e=>({address:e.address}))))),(e=>e.length>0)))};I.post("/api/log/songplayed",((e,t)=>{t.header("Content-Type","application/json; charset=utf-8");const n=e.body.item,s=e.body.sessionid,o=e.body.item.origin;null!==n&&null!==n.song&&N.addSongLog({sessionid:s,songid:n.song.id,origin:o}).then((e=>{const t=e.dataValues,s=[];return y().forEach(n.votes,(e=>{const n={logid:t.id,userid:e.userid,vote:e.points};s.push(N.addSongUserLog(n))})),new Promise(((e,n)=>{Promise.all(s).then(e(t)).catch(n)}))})).then((e=>t.status(200).send(e))).catch((e=>(console.log("Cannot create song logs",JSON.stringify(e)),t.status(500).send(e))))})),I.post("/api/log/songcomplete",((e,t)=>{t.header("Content-Type","application/json; charset=utf-8");const n=e.body.id,s=e.body.listenratio;N.updateSongLog({id:n,listenratio:s}).then((()=>t.status(200).end())).catch((e=>(console.log("Cannot update song logs",JSON.stringify(e)),t.status(500).send(e))))})),I.get("/api/log/mostplayed/:count",((e,t)=>{t.header("Content-Type","application/json; charset=utf-8"),S.default.SongLog.findAll({group:["songid"],attributes:["songid",[f().fn("COUNT","songid"),"PlayCount"]],limit:e.params.count,order:[[f().literal("PlayCount"),"desc"]],include:[{model:S.default.Song,as:"Song"}]}).then((e=>{const n=y().map(e,(e=>({count:e.dataValues.PlayCount,...(0,d.formatSong)(e.Song)})));t.status(200).send(n)})).catch((n=>(console.log(`There was an error querying most played songs (${e.params.count})`,n.toString()),t.status(500).send(n))))})),I.get("/api/log/mostswipped/:count",((e,t)=>{t.header("Content-Type","application/json; charset=utf-8"),S.default.SongLog.findAll({group:["songid"],attributes:["songid",[f().fn("AVG",f().col("listenratio")),"PlayRatio"]],limit:e.params.count,where:{listenratio:{[p.Op.ne]:null}},order:[[f().literal("PlayRatio"),"asc"]],include:[{model:S.default.Song,as:"Song"}]}).then((e=>{const n=y().map(e,(e=>({playratio:e.dataValues.PlayRatio,...(0,d.formatSong)(e.Song)})));t.status(200).send(n)})).catch((n=>(console.log(`There was an error querying most swipped songs (${e.params.count})`,n.toString()),t.status(500).send(n))))})),I.get("/api/log/mostlistened/:count",((e,t)=>{t.header("Content-Type","application/json; charset=utf-8"),S.default.SongLog.findAll({group:["songid"],attributes:["songid",[f().fn("AVG",f().col("listenratio")),"PlayRatio"]],limit:e.params.count,where:{listenratio:{[p.Op.ne]:null}},order:[[f().literal("PlayRatio"),"desc"]],include:[{model:S.default.Song,as:"Song"}]}).then((e=>{const n=y().map(e,(e=>({playratio:e.dataValues.PlayRatio,...(0,d.formatSong)(e.Song)})));t.status(200).send(n)})).catch((n=>(console.log(`There was an error querying most listened songs (${e.params.count})`,n.toString()),t.status(500).send(n))))})),I.get("/api/log/lastplayed/:count",((e,t)=>{t.header("Content-Type","application/json; charset=utf-8"),S.default.SongLog.findAll({limit:e.params.count,order:[["createdAt","desc"]],include:[{model:S.default.Song,as:"Song"}]}).then((e=>{const n=y().map(e,(e=>({playedDate:e.dataValues.createdAt,...(0,d.formatSong)(e.Song)})));t.status(200).send(n)})).catch((n=>(console.log(`There was an error querying last played songs (${e.params.count})`,n.toString()),t.status(500).send(n))))}));const q=process.env.COVER_FOLDER||"/home/music/cover";h().existsSync(q)||h().mkdirSync(q),h().existsSync(q+"/thumbs/")||h().mkdirSync(q+"/thumbs/");const x=process.env.MUSIC_FOLDER||"/home/music/wbom";h().existsSync(x)||h().mkdirSync(x);const A=n(147);console.clear(),console.log("__________.__        .__           _________                                         "),console.log("\\______   \\__| _____ |__|__  ___  /   _____/ ____ _____    ____   ____   ___________ "),console.log(" |     ___/  |/     \\|  \\  \\/  /  \\_____  \\_/ ___\\\\__  \\  /    \\ /    \\_/ __ \\_  __ \\"),console.log(" |    |   |  |  Y Y  \\  |>    <   /        \\  \\___ / __ \\|   |  \\   |  \\  ___/|  | \\/"),console.log(" |____|   |__|__|_|  /__/__/\\_ \\ /_______  /\\___  >____  /___|  /___|  /\\___  >__|   "),console.log("                   \\/         \\/         \\/     \\/     \\/     \\/     \\/     \\/       v "+A.version),console.log(),console.log("> Music folder: "+x),console.log("> Cover folder: "+q);const O=G()[0],P=`${y().isNil(O)?"localhost":O.address}${process.env.ROUTERPORT?`:${process.env.ROUTERPORT}`:""}`,j="http://"+P;console.log(`> Scanner try to connect router, ${j}`);const L=o().connect(j,{upgrade:!1,transports:["websocket"],reconnection:!0,forceNew:!1,query:{binding:JSON.stringify({component:"scanner",user:{id:0,username:"scanner",rights:0}})}}),k={nbsongs:0,since:null,queue:0,completed:0,failed:0};var C=[];S.default.DB.query("SELECT filepath, filename FROM Songs",{type:f().QueryTypes.SELECT}).then((e=>{var t;console.log("> Database scanned"),C=e,t=x,l().watch(t,{ignored:/(^|[/\\])\../,persistent:!0,awaitWriteFinish:{stabilityThreshold:2e3,pollInterval:100}}).on("add",((e,t)=>{const n=u(e);D(n),g(n)&&(0,d.isRegistered)(n,(e=>{t.ino===e.ino&&t.size===e.size||(0,c.S)({action:"update",file:n,stats:t})}),(()=>{(0,c.S)({action:"add",file:n,stats:t})}),(e=>{console.log("watcher add error: "+e.toString())}))})).on("unlink",(e=>{const t=u(e);g(t)&&(0,c.S)({action:"remove",file:t})})).on("change",((e,t)=>{const n=u(e);g(n)&&(0,c.S)({action:"update",file:n,stats:t})})).on("ready",(()=>{console.log("> Initial folder scan complete. Ready for changes"),U(),K()}))})),L.on("connect",(()=>{console.log("> Router connected: "+P),L.on("command",(e=>{const t=e;console.log("on scanner command",t),t.action})),S.default.DB.query("SELECT COUNT(*) AS nbsongs, MAX(createdAt) AS since FROM Songs",{type:f().QueryTypes.SELECT}).then((e=>{const t=e[0];k.nbsongs=t.nbsongs,k.since=a()(t.since,"YYYY-MM-DD"),K()})).catch((e=>{console.log("There was an error querying scanner stats",e.toString())}))}));const M=()=>new Promise(((e,t)=>{console.log("> Clean database orphans"),S.default.DB.query("DELETE FROM Artists WHERE id NOT IN ( SELECT artist_id FROM SongArtists )",{type:f().QueryTypes.DELETE}).then((()=>S.default.DB.query("DELETE FROM Genres WHERE id NOT IN ( SELECT genre_id FROM SongGenres UNION SELECT genre_id FROM ArtistGenres )",{type:f().QueryTypes.DELETE}))).then(e).catch(t)})),D=e=>{y().remove(C,(t=>t.filepath===e.filepath&&t.filename===e.filename))},U=()=>{if(C.length>0){const e=[];S.default.DB.transaction((t=>(y().forEach(C,(n=>{e.push(S.default.Song.destroy({where:{filepath:n.filepath,filename:n.filename},transaction:t}))})),Promise.all(e)))).then((()=>{console.log("> "+C.length+" database entries without file removed"),console.log("> Database is up-to-date")})).catch((e=>{console.log("! Cannot clean entries without file "+e.toString())}))}else console.log("> Database is up-to-date")},K=()=>{const e=JSON.stringify(k);L.emit("update",e)}},416:(e,t,n)=>{"use strict";n.d(t,{S:()=>u});const s=require("bull");var o=n.n(s),i=n(415),a=n(245),r=n.n(a);const l=process.env.PIMIX_REDIS||"127.0.0.1:6379",d=n(671),c=o()("Register Song","redis://"+l);c.empty().then((()=>{console.log("> Queue cleaned"),c.process(d)})).catch((e=>{console.log("! Queue error "+e.toString())})),c.on("error",(e=>{console.log("Job execution error: "+e)})).on("completed",((e,t)=>{i.et.queue--,i.et.completed++,"add"===e.data.action?(i.et.nbsongs++,i.et.since=r()()):"remove"===e.data.action&&i.et.nbsongs--,console.log("Job completed ["+t.info+"] "+t.time+"ms"),e.remove()})).on("failed",((e,t)=>{i.et.queue--,i.et.failed++,console.log("Job failed ["+t.info+"] "+t.time+"ms"),e.remove()})).on("active",((e,t)=>{(0,i.T_)()})).on("drained",(()=>{(0,i.J8)(),console.log("> Queue idle"),(0,i.T_)()}));const u=e=>{i.et.queue++,c.add(e)}},671:(e,t,n)=>{const{deleteSong:s,createSong:o,updateSong:i}=n(996),{spotifyArtist:a}=n(672),{mp3gain:r}=n(222),l=n(614);e.exports=function(e){return new Promise(((t,n)=>{const d=process.hrtime(),c={success:!1,action:e.data.action,info:"",time:0,messages:[]};l.default.sequelize.transaction((t=>{switch(e.data.action){case"remove":return c.info="remove "+e.data.file.filename,s(e,t);case"add":return c.info="add "+e.data.file.filename,o(e,t);case"update":return c.info="update "+e.data.file.filename,i(e,t);case"artist-spotify":return c.info="spotify "+e.data.artist.name,a(e,t);case"mp3-gain":return c.info="gain "+e.data.file.filename,r(e);default:n(c)}})).then((()=>{c.success=!0,c.time=process.hrtime(d)[1]/1e6,t(c)})).catch((e=>{c.time=process.hrtime(d)[1]/1e6,void 0!==e&&(c.messages=[e.toString()]),n(c)}))}))}},996:(e,t,n)=>{"use strict";n.r(t),n.d(t,{createSong:()=>m,deleteSong:()=>f,saveArtistsAndGenres:()=>_,updateSong:()=>h});var s=n(614),o=n(517),i=n.n(o);const a=require("music-metadata"),r=require("jimp");var l=n.n(r),d=n(419),c=n(416);const u=n(358),g=n(680),p=process.env.COVER_FOLDER||"/home/music/cover",f=(e,t)=>new Promise(((n,s)=>{g.destroy({filepath:e.data.file.filepath,filename:e.data.file.filename},t).then((()=>{const t=[],s=e.data.file.filename.lastIndexOf("."),o=e.data.file.filename.substring(0,s),i=p+"/"+o+".jpg";u.unlink(i,(e=>{null!==e&&t.push("Unable to delete cover "+i+": "+e)}));const a=p+"/thumbs/"+o+".jpg";u.unlink(a,(e=>{null!==e&&t.push("Unable to delete cover thumbnail"+a+": "+e)})),n()})).catch(s)})),m=(e,t)=>new Promise(((n,o)=>{let i;y(e).then((e=>(i=e,s.default.Song.create(i.song,{transaction:t})))).then((e=>(i.song.id=e.id,_(i,t)))).then((()=>{(0,c.S)({action:"mp3-gain",file:e.data.file})})).then(n).catch(o)})),h=(e,t)=>new Promise(((n,o)=>{let i;y(e).then((e=>(i=e,s.default.Song.findOne({where:{filepath:i.song.filepath,filename:i.song.filename}})))).then((e=>(i.song.id=e.id,s.default.Song.update(i.song,{where:{id:i.song.id},transaction:t})))).then((()=>((e,t)=>s.default.SongArtist.destroy({where:{song_id:e.id},transaction:t}))(i.song,t))).then((()=>((e,t)=>s.default.SongGenre.destroy({where:{song_id:e.id},transaction:t}))(i.song,t))).then((()=>_(i,t))).then(n).catch(o)})),_=(e,t)=>new Promise(((n,o)=>{const a=e.artist.split(";"),r=[];i().forEach(a,(n=>{r.push(((e,t,n)=>new Promise(((o,i)=>{const a=e.trim();var r=!1;s.default.Artist.findOne({where:{name:a}}).then((e=>null!==e?e:(r=!0,s.default.Artist.create({name:a},{transaction:n})))).then((e=>{o({artist_id:e.id,song_id:t,name:a,isNewRecord:r})})).catch(i)})))(n,e.song.id,t))}));const l=e.genre,u=[];i().forEach(l,(n=>{u.push((0,d.tB)(n,e.song.id,t))})),Promise.all(r).then((e=>{const n=i().filter(e,(e=>e.isNewRecord));i().forEach(n,(e=>{(0,c.S)({action:"artist-spotify",artist:e})}));const o=i().map(e,(e=>({song_id:e.song_id,artist_id:e.artist_id})));return s.default.SongArtist.bulkCreate(o,{transaction:t})})).then((()=>Promise.all(u))).then((e=>s.default.SongGenre.bulkCreate(e,{transaction:t}))).then((()=>S(e))).then(n).catch(o)})),y=e=>new Promise(((t,n)=>{const s=e.data.file.filepath+"/"+e.data.file.filename;console.log("parsing ",s),(0,a.parseFile)(s).then((n=>{const s={filepath:e.data.file.filepath,filename:e.data.file.filename,title:n.common.title,album:n.common.album,year:n.common.year,bitrate:n.format.bitrate,duration:n.format.duration,samplerate:n.format.sampleRate,size:e.data.stats.size,ino:e.data.stats.ino,birth:e.data.stats.birthtime};let o=n.common.artist;0===o.length&&(o=i().join(n.common.artists,";")),t({song:s,artist:o,genre:n.common.genre,cover:n.common.picture})})).catch(n)})),S=e=>new Promise(((t,n)=>{const s=e.cover,o=e.song.filename;if(s.length>0){const e=s[0].data,t=o.lastIndexOf("."),i=p+"/"+o.substring(0,t)+".jpg",a=p+"/thumbs/"+o.substring(0,t)+".jpg";l().read(e,((e,t)=>{e?n(e):t.resize(500,500).quality(60).write(i).resize(150,150).quality(60).write(a)}))}t()}))},222:(e,t,n)=>{"use strict";n.r(t),n.d(t,{mp3gain:()=>o});const s=require("child_process"),o=e=>new Promise(((t,n)=>{const o="mp3gain -r -p -c '"+e.data.file.filepath+"/"+e.data.file.filename+"'";(0,s.exec)(o,((e,s)=>{null!==e?n(e):t(s)}))}))},672:(e,t,n)=>{"use strict";n.r(t),n.d(t,{spotifyArtist:()=>u,spotifyRequestArtist:()=>l,spotifyRequestArtistByID:()=>d,spotifyRequestArtistRelated:()=>c});var s=n(519),o=n.n(s),i=n(614),a=n(419),r=new(o())({clientId:"b5bddd99c0e5478882a08dd12b3f8198",clientSecret:"98f938ee4c0a4bbfb6c91d164d5922a8",redirectUri:"http://localhost/spotify"});const l=e=>new Promise(((t,n)=>(console.log("spotify request",e),r.clientCredentialsGrant().then((n=>{r.setAccessToken(n.body.access_token),t(r.searchArtists(e))})).catch(n)))),d=e=>new Promise(((t,n)=>r.clientCredentialsGrant().then((n=>{r.setAccessToken(n.body.access_token),t(r.getArtist(e))})).catch(n))),c=e=>new Promise(((t,n)=>r.clientCredentialsGrant().then((n=>{r.setAccessToken(n.body.access_token),t(r.getArtistRelatedArtists(e))})).catch(n))),u=(e,t)=>new Promise(((n,s)=>{const o=e.data.artist;let a,r=[];l(o.name).then((e=>{a=e.main,r=e.related;const n={spotifyId:a.artist.spotifyId,popularity:a.artist.popularity,followers:a.artist.followers},s={id:o.artist_id};return i.default.Artist.update(n,{where:s,transaction:t})})).then((()=>a.genres.reduce(((e,n)=>e.then((e=>g(n.name,o.artist_id,t)))),Promise.resolve()))).then((()=>r.reduce(((e,n)=>e.then((e=>p(n,o.artist_id,t)))),Promise.resolve()))).then(n).catch(s)})),g=(e,t,n)=>new Promise(((s,o)=>{(0,a.D2)(e,t,n).then((e=>i.default.ArtistGenre.create(e,{transaction:n}))).then(s).catch(o)})),p=(e,t,n)=>{const s={artist_id:t,name:e.artist.name,spotifyId:e.artist.spotifyId,followers:e.artist.followers,popularity:e.artist.popularity};return i.default.ArtistRelated.create(s,{transaction:n})}},956:(e,t,n)=>{var s={"./artist.js":890,"./artistgenre.js":978,"./artistrelated.js":953,"./favorites.js":936,"./genre.js":567,"./playlist.js":941,"./playlistsong.js":806,"./song.js":818,"./songartist.js":673,"./songgenre.js":829,"./songlog.js":735,"./songloguser.js":498,"./user.js":729};function o(e){var t=i(e);return n(t)}function i(e){if(!n.o(s,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return s[e]}o.keys=function(){return Object.keys(s)},o.resolve=i,e.exports=o,o.id=956},432:e=>{"use strict";e.exports=require("bcryptjs")},517:e=>{"use strict";e.exports=require("lodash")},245:e=>{"use strict";e.exports=require("moment")},496:e=>{"use strict";e.exports=require("sequelize")},519:e=>{"use strict";e.exports=require("spotify-web-api-node")},358:e=>{"use strict";e.exports=require("fs")},626:e=>{"use strict";e.exports=JSON.parse('{"development":{"dialect":"sqlite","seederStorage":"sequelize","storage":"./pimix.sqlite3","logging":false},"production":{"dialect":"sqlite","storage":"/home/pimix.sqlite3","seederStorage":"sequelize","logging":false}}')},147:e=>{"use strict";e.exports=JSON.parse('{"name":"pimix-data","version":"1.0.8","description":"Pimix REST API from data management","main":"index.js","scripts":{"scanner":"nodemon ./dist/scanner.js","cluster":"nodemon ./dist/pimix-cluster.js","data":"nodemon ./dist/rest.js","wifi":"nodemon ./dist/wifi.js","test":"echo \\"Error: no test specified\\" && exit 1","lint":"eslint \\"src/**/*.js\\" --ignore-pattern node_modules/ ","build":"rm -rf dist && webpack","start":"yarn concurrently -k -n \\"data,scanner,wifi\\" -p \\"[{name}]\\" -c \\"yellow,green,blue\\" \\"yarn data\\" \\"yarn scanner\\" \\"yarn wifi\\""},"repository":{"type":"git","url":"git+https://github.com/vbarrois/pimix-data.git"},"author":"Vincent Barrois","license":"ISC","bugs":{"url":"https://github.com/vbarrois/pimix-data/issues"},"homepage":"https://github.com/vbarrois/pimix-data#readme","dependencies":{"@babel/core":"^7.9.6","@babel/preset-env":"^7.9.6","babel-loader":"^8.1.0","bcryptjs":"^2.4.3","bull":"^3.11.0","chatgpt":"^4.7.2","child_process":"^1.0.2","chokidar":"^3.5.3","concurrently":"^5.1.0","copy-webpack-plugin":"^10.2.0","eslint":"^6.6.0","eslint-config-standard":"^14.1.0","eslint-loader":"^4.0.2","eslint-plugin-import":"^2.18.2","eslint-plugin-node":"^10.0.0","eslint-plugin-promise":"^4.2.1","eslint-plugin-standard":"^4.0.1","express":"^4.17.1","getmac":"^5.16.0","jimp":"^0.10.0","jsonwebtoken":"^8.5.1","moment":"^2.24.0","music-metadata":"^7.13.3","nodemon":"^1.19.4","qrcode":"^1.5.1","recluster":"^1.0.0","sequelize":"^5.21.1","sequelize-cli":"^6.6.0","socket.io-client":"^4.4.1","spotify-web-api-node":"^5.0.2","sqlite3":"^5.0.8","uuid":"^9.0.0","webpack":"^5.75.0","webpack-cli":"^5.0.1","webpack-dev-middleware":"^6.0.1","webpack-hot-middleware":"^2.25.3","webpack-node-externals":"^3.0.0"}}')}},t={};function n(s){var o=t[s];if(void 0!==o)return o.exports;var i=t[s]={exports:{}};return e[s](i,i.exports,n),i.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var s in t)n.o(t,s)&&!n.o(e,s)&&Object.defineProperty(e,s,{enumerable:!0,get:t[s]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n(415)})();